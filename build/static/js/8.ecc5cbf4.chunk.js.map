{"version":3,"sources":["axios-instance.js","hooks/http-error-handler.js","hoc/withErrorHandler/withErrorHandler.js","components/Header/Header.js","components/Header/Header.module.css","containers/Products/Products.module.css","containers/Products/Products.js"],"names":["instance","axios","create","baseURL","HttpErrorHandlerHook","httpClient","useState","error","setError","reqInterceptor","interceptors","request","use","req","respInterceptor","response","resp","err","useEffect","eject","withErrorHandler","WrappedComponent","props","httpErrorHandlerHook","clearError","Modal","show","modalClosed","message","Header","location","useLocation","buttons","clicked","clicked1","btn1","clicked2","btn2","Object","keys","paramsId","length","roles","includes","pathname","className","classes","title","module","exports","AddProduct","React","lazy","products","setProducts","isAdding","setIsAdding","wasAdded","setWasAdded","isLoading","setIsLoading","get","then","status","data","catch","history","useHistory","listProducts","map","prod","category","name","price","ProductsBtn","onClick","push","id","productClickedHandler","modeDisplay","match","params","Products"],"mappings":"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","file":"static/js/8.ecc5cbf4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n});\r\n\r\nexport default instance;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst HttpErrorHandlerHook = (httpClient) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\r\n    setError(null);\r\n    return req;\r\n  });\r\n\r\n  const respInterceptor = httpClient.interceptors.response.use(\r\n    (resp) => resp,\r\n    (err) => {\r\n      setError(err);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      httpClient.interceptors.request.eject(reqInterceptor);\r\n      httpClient.interceptors.response.eject(respInterceptor);\r\n    };\r\n  }, [\r\n    reqInterceptor,\r\n    respInterceptor,\r\n    httpClient.interceptors.request,\r\n    httpClient.interceptors.response,\r\n  ]);\r\n\r\n  const errorConfirmedHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return [error, errorConfirmedHandler];\r\n};\r\n\r\nexport default HttpErrorHandlerHook;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport httpErrorHandlerHook from \"../../hooks/http-error-handler\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return (props) => {\r\n    const [error, clearError] = httpErrorHandlerHook(axios);\r\n    return (\r\n      <Fragment>\r\n        <Modal show={error} modalClosed={clearError}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Header = (props) => {\r\n  const location = useLocation();\r\n  let buttons = (\r\n    <div>\r\n      <Button clicked={props.clicked1}>{props.btn1}</Button>\r\n      <Button clicked={props.clicked2}>{props.btn2}</Button>\r\n    </div>\r\n  );\r\n\r\n  if (\r\n    Object.keys(props.paramsId).length === 0 ||\r\n    !props.roles.includes(\"admin\")\r\n  ) {\r\n    buttons = <Button clicked={props.clicked1}>{props.btn1}</Button>;\r\n  }\r\n\r\n  if (\r\n    location.pathname === \"/sales\" ||\r\n    (location.pathname === \"/products\" && !props.roles.includes(\"admin\"))\r\n  ) {\r\n    buttons = null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <h2>{props.title}</h2>\r\n      {buttons}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__17NkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Products\":\"Products_Products__1kZ5u\",\"ProductsBtn\":\"Products_ProductsBtn__1oof0\"};","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Products.module.css\";\r\nimport axios from \"../../axios-instance\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nconst AddProduct = React.lazy(() => import(\"../AddProduct/AddProduct\"));\r\n\r\nconst Products = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [wasAdded, setWasAdded] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (wasAdded) {\r\n      setIsLoading(true);\r\n      axios\r\n        .get(\"/products\")\r\n        .then((resp) => {\r\n          if (resp.status >= 200 && resp.status < 300) {\r\n            setIsLoading(false);\r\n            setProducts(resp.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [wasAdded]);\r\n\r\n  const history = useHistory();\r\n\r\n  const productClickedHandler = (prod) => {\r\n    history.push(`/products/${prod.id}`);\r\n  };\r\n\r\n  const productAddHandler = () => {\r\n    setWasAdded(false);\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const listProducts = products.map((prod) => {\r\n    return (\r\n      <tr key={prod.id}>\r\n        <td>{prod.category}</td>\r\n        <td>{prod.name}</td>\r\n        <td>{prod.price}</td>\r\n        <td>\r\n          <button\r\n            className={classes.ProductsBtn}\r\n            onClick={() => productClickedHandler(prod)}\r\n          >\r\n            ➡▶\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  let modeDisplay = (\r\n    <Fragment>\r\n      <Header\r\n        title=\"Products\"\r\n        paramsId={props.match.params}\r\n        roles={props.roles}\r\n        btn1=\"ADD\"\r\n        clicked1={productAddHandler}\r\n      />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Product Name</th>\r\n            <th>Price</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{listProducts}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n\r\n  if (isLoading && !isAdding) {\r\n    modeDisplay = <Spinner />;\r\n  }\r\n\r\n  if (isAdding) {\r\n    modeDisplay = (\r\n      <AddProduct\r\n        setIsAdding={setIsAdding}\r\n        setWasAdded={setWasAdded}\r\n        products={products}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className={classes.Products}>{modeDisplay}</div>;\r\n};\r\n\r\nexport default withErrorHandler(Products, axios);\r\n"],"sourceRoot":""}