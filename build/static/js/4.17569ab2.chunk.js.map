{"version":3,"sources":["containers/Cart/Cart.js","axios-instance.js","hooks/http-error-handler.js","hoc/withErrorHandler/withErrorHandler.js","components/Header/Header.js","components/Header/Header.module.css","components/ConfirmMessage/ActionDoneMessage/ActionDoneMessage.js","components/ConfirmMessage/ActionDoneMessage/ActionDoneMessage.module.css","containers/Cart/Cart.module.css"],"names":["withErrorHandler","props","useState","isConfirming","setIsConfirming","isDone","setIsDone","isLoading","setIsLoading","message","setMessage","history","useHistory","cancelMessageHandler","confirmMessage","cart","clicked1","clicked2","orderedProd","map","prod","productId","id","quantity","axios","post","customer","user","products","then","resp","status","length","localStorage","removeItem","catch","err","clicked","cartProducts","category","name","price","className","classes","CartBtn","onClick","product","slice","index","indexOf","splice","setCart","productDeleteHandler","Cart","show","modalClosed","title","paramsId","match","params","btn1","push","instance","create","baseURL","HttpErrorHandlerHook","httpClient","error","setError","reqInterceptor","interceptors","request","use","req","respInterceptor","response","useEffect","eject","WrappedComponent","httpErrorHandlerHook","clearError","Modal","Header","location","useLocation","buttons","btn2","Object","keys","roles","includes","pathname","module","exports","actionDoneMessage","ActionDoneMessage"],"mappings":"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","file":"static/js/4.17569ab2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport ConfirmMessage from \"../../components/ConfirmMessage/ConfirmMessage\";\r\nimport ActionDoneMessage from \"../../components/ConfirmMessage/ActionDoneMessage/ActionDoneMessage\";\r\nimport classes from \"./Cart.module.css\";\r\nimport axios from \"../../axios-instance\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nconst Cart = (props) => {\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const productDeleteHandler = (product) => {\r\n    const cart = props.cart.slice();\r\n    const index = cart.indexOf(product);\r\n    cart.splice(index, 1);\r\n    props.setCart(cart);\r\n    setMessage(\"Product has been removed from the shopping cart.\");\r\n    setIsDone(true);\r\n  };\r\n\r\n  const checkoutButtonHandler = () => {\r\n    setIsLoading(true);\r\n    const orderedProd = props.cart.map((prod) => {\r\n      return {\r\n        productId: prod.id,\r\n        quantity: prod.quantity,\r\n      };\r\n    });\r\n\r\n    axios\r\n      .post(\"/orders\", {\r\n        customer: props.user,\r\n        products: orderedProd,\r\n      })\r\n      .then((resp) => {\r\n        if (resp.status >= 200 && resp.status < 300) {\r\n          setIsLoading(false);\r\n          setIsConfirming(false);\r\n          setMessage(\"Order was created!\");\r\n          setIsDone(true);\r\n          props.cart.length = 0;\r\n          localStorage.removeItem(\"cart\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const openMessageHandler = () => {\r\n    setIsConfirming(true);\r\n  };\r\n\r\n  const cancelMessageHandler = () => {\r\n    if (isConfirming) {\r\n      setIsConfirming(false);\r\n    } else if (isDone) {\r\n      setIsDone(false);\r\n    }\r\n  };\r\n\r\n  const goToProductsBtnHandler = () => {\r\n    history.push(\"/products\");\r\n  };\r\n\r\n  let confirmMessage = null;\r\n\r\n  if (isConfirming) {\r\n    confirmMessage = (\r\n      <ConfirmMessage\r\n        cart={props.cart}\r\n        clicked1={cancelMessageHandler}\r\n        clicked2={checkoutButtonHandler}\r\n      />\r\n    );\r\n  } else if (isDone) {\r\n    confirmMessage = (\r\n      <ActionDoneMessage message={message} clicked={cancelMessageHandler} />\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    confirmMessage = <Spinner />;\r\n  }\r\n\r\n  const cartProducts = props.cart.map((prod) => {\r\n    return (\r\n      <tr key={prod.id}>\r\n        <td>{prod.category}</td>\r\n        <td>{prod.name}</td>\r\n        <td>{prod.price}</td>\r\n        <td>{prod.quantity}</td>\r\n        <td>\r\n          <button\r\n            className={classes.CartBtn}\r\n            onClick={() => productDeleteHandler(prod)}\r\n          >\r\n            ‚ùå\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Cart}>\r\n      <Modal show={isConfirming || isDone} modalClosed={cancelMessageHandler}>\r\n        {confirmMessage}\r\n      </Modal>\r\n      <Header\r\n        title=\"Shopping Cart\"\r\n        paramsId={props.match.params}\r\n        btn1={props.cart.length > 0 ? \"CHECKOUT\" : \"GO TO PRODUCTS LIST\"}\r\n        clicked1={\r\n          props.cart.length > 0 ? openMessageHandler : goToProductsBtnHandler\r\n        }\r\n      />\r\n      {props.cart.length < 1 ? (\r\n        <h4>\r\n          The shopping cart is empty! Please add something to it before trying\r\n          to checkout.\r\n        </h4>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Category</th>\r\n              <th>Product Name</th>\r\n              <th>Price</th>\r\n              <th>Quantity</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{cartProducts}</tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(Cart, axios);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n});\r\n\r\nexport default instance;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst HttpErrorHandlerHook = (httpClient) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\r\n    setError(null);\r\n    return req;\r\n  });\r\n\r\n  const respInterceptor = httpClient.interceptors.response.use(\r\n    (resp) => resp,\r\n    (err) => {\r\n      setError(err);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      httpClient.interceptors.request.eject(reqInterceptor);\r\n      httpClient.interceptors.response.eject(respInterceptor);\r\n    };\r\n  }, [\r\n    reqInterceptor,\r\n    respInterceptor,\r\n    httpClient.interceptors.request,\r\n    httpClient.interceptors.response,\r\n  ]);\r\n\r\n  const errorConfirmedHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return [error, errorConfirmedHandler];\r\n};\r\n\r\nexport default HttpErrorHandlerHook;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport httpErrorHandlerHook from \"../../hooks/http-error-handler\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return (props) => {\r\n    const [error, clearError] = httpErrorHandlerHook(axios);\r\n    return (\r\n      <Fragment>\r\n        <Modal show={error} modalClosed={clearError}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Header = (props) => {\r\n  const location = useLocation();\r\n  let buttons = (\r\n    <div>\r\n      <Button clicked={props.clicked1}>{props.btn1}</Button>\r\n      <Button clicked={props.clicked2}>{props.btn2}</Button>\r\n    </div>\r\n  );\r\n\r\n  if (\r\n    Object.keys(props.paramsId).length === 0 ||\r\n    !props.roles.includes(\"admin\")\r\n  ) {\r\n    buttons = <Button clicked={props.clicked1}>{props.btn1}</Button>;\r\n  }\r\n\r\n  if (\r\n    location.pathname === \"/sales\" ||\r\n    (location.pathname === \"/products\" && !props.roles.includes(\"admin\"))\r\n  ) {\r\n    buttons = null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <h2>{props.title}</h2>\r\n      {buttons}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__17NkT\"};","import React from \"react\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./ActionDoneMessage.module.css\";\r\n\r\nconst actionDoneMessage = (props) => {\r\n  return (\r\n    <div className={classes.ActionDoneMessage}>\r\n      <p>{props.message}</p>\r\n      <Button clicked={props.clicked}>OK</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default actionDoneMessage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionDoneMessage\":\"ActionDoneMessage_ActionDoneMessage__3ysrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cart\":\"Cart_Cart__1Vqaa\",\"CartBtn\":\"Cart_CartBtn__2m-Wg\"};"],"sourceRoot":""}