{"version":3,"sources":["axios-instance.js","hooks/http-error-handler.js","hoc/withErrorHandler/withErrorHandler.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","Utility/Utility.js","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["instance","axios","create","baseURL","HttpErrorHandlerHook","httpClient","useState","error","setError","reqInterceptor","interceptors","request","use","req","respInterceptor","response","resp","err","useEffect","eject","withErrorHandler","WrappedComponent","props","httpErrorHandlerHook","clearError","Modal","show","modalClosed","message","input","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","className","Input","Label","label","join","type","placeholder","value","onChange","changed","module","exports","checkValidity","rules","isValid","required","trim","minLength","length","isNumeric","test","username","validation","valid","password","authForm","setAuthForm","isLoading","setIsLoading","formElementsArray","key","id","data","history","useHistory","form","map","formElement","event","fieldName","updatedFields","target","inputChangedHandler","Auth","style","borderTop","clicked","preventDefault","post","then","status","setUser","setRoles","roles","setIsAuthenticated","localStorage","setItem","JSON","stringify","replace","catch"],"mappings":"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","file":"static/js/7.2504cee4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:4000/\",\r\n});\r\n\r\nexport default instance;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst HttpErrorHandlerHook = (httpClient) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\r\n    setError(null);\r\n    return req;\r\n  });\r\n\r\n  const respInterceptor = httpClient.interceptors.response.use(\r\n    (resp) => resp,\r\n    (err) => {\r\n      setError(err);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      httpClient.interceptors.request.eject(reqInterceptor);\r\n      httpClient.interceptors.response.eject(respInterceptor);\r\n    };\r\n  }, [\r\n    reqInterceptor,\r\n    respInterceptor,\r\n    httpClient.interceptors.request,\r\n    httpClient.interceptors.response,\r\n  ]);\r\n\r\n  const errorConfirmedHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return [error, errorConfirmedHandler];\r\n};\r\n\r\nexport default HttpErrorHandlerHook;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport httpErrorHandlerHook from \"../../hooks/http-error-handler\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return (props) => {\r\n    const [error, clearError] = httpErrorHandlerHook(axios);\r\n    return (\r\n      <Fragment>\r\n        <Modal show={error} modalClosed={clearError}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  const inputClasses = [classes.InputElement];\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      <input\r\n        className={inputClasses.join(\" \")}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.changed}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__Pn_El\",\"Label\":\"Input_Label__3vOCB\",\"InputElement\":\"Input_InputElement__3XM0f\",\"Invalid\":\"Input_Invalid__3yo0_\"};","export const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n\r\n  if (!rules) return true;\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3R6Ff\"};","import React, { Fragment, useState } from \"react\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { checkValidity } from \"../../Utility/Utility\";\r\nimport classes from \"./Auth.module.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"../../axios-instance\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nconst Auth = (props) => {\r\n  const [authForm, setAuthForm] = useState({\r\n    username: {\r\n      label: \"User Name\",\r\n      type: \"text\",\r\n      placeholder: \"Your Username\",\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      label: \"Password\",\r\n      type: \"password\",\r\n      placeholder: \"Your Password\",\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 6,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const formElementsArray = [];\r\n  for (let key in authForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      data: authForm[key],\r\n    });\r\n  }\r\n\r\n  const history = useHistory();\r\n  const inputChangedHandler = (event, fieldName) => {\r\n    const updatedFields = {\r\n      ...authForm,\r\n      [fieldName]: {\r\n        ...authForm[fieldName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          authForm[fieldName].validation\r\n        ),\r\n        touched: true,\r\n      },\r\n    };\r\n    setAuthForm(updatedFields);\r\n  };\r\n\r\n  const loginHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    axios\r\n      .post(\"/login\", {\r\n        username: authForm.username.value,\r\n        password: authForm.password.value,\r\n      })\r\n      .then((resp) => {\r\n        if (resp.status >= 200 && resp.status < 300) {\r\n          setIsLoading(false);\r\n          props.setUser(resp.data.username);\r\n          props.setRoles(resp.data.roles);\r\n          props.setIsAuthenticated(true);\r\n          localStorage.setItem(\"username\", resp.data.username);\r\n          localStorage.setItem(\"roles\", JSON.stringify(resp.data.roles));\r\n          localStorage.setItem(\"isAuthenticated\", JSON.stringify(true));\r\n          history.replace(\"/products\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  let form = formElementsArray.map((formElement) => {\r\n    return (\r\n      <Input\r\n        key={formElement.id}\r\n        label={formElement.data.label}\r\n        type={formElement.data.type}\r\n        placeholder={formElement.data.placeholder}\r\n        value={formElement.data.value}\r\n        changed={(event) => inputChangedHandler(event, formElement.id)}\r\n        invalid={!formElement.data.valid}\r\n        shouldValidate={formElement.data.validation}\r\n        touched={formElement.data.touched}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Auth}>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <p>Sign In</p>\r\n          <hr style={{ borderTop: \"solid dodgerblue\" }}></hr>\r\n          {form}\r\n          <Button clicked={loginHandler}>LOG IN</Button>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(Auth, axios);\r\n"],"sourceRoot":""}